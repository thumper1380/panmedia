version: '3.3'

volumes:
  panmedia_data: {}

services:
  backend:
    image: panmedia_backend
    build:
      context: ./backend
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    command: /start.sh
    entrypoint: /entrypoint.sh
    restart: on-failure
    env_file: .env

  postgres:
    image: postgres:15-alpine
    volumes:
      - panmedia_data:/var/lib/postgresql/data
    env_file: .env

  redis:
    image: "redis:alpine"

  frontend:
    image: node:alpine
    command: npm run dev
    volumes:
      - ./.env:/app/.env:ro
      - ./frontend:/app
    working_dir: /app
    restart: on-failure
    ports:
      - "8080:5173"

  telegram-bot:
    build:
      context: ./backend
    command: python manage.py run_telegram_bot
    volumes:
      - ./backend:/app

    depends_on:
      - postgres
      - redis
    env_file: .env

  celery:
    build: ./backend
    command: celery -A config worker -l warning -c 4
    volumes:
      - ./backend:/app
    env_file: .env
    working_dir: /app
    depends_on:
      - postgres
      - redis

  flower:
    build: ./backend
    image: mher/flower
    command: celery -A config flower
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery
      - postgres
      - celery-beat
      - backend
    volumes:
      - ./backend:/app
    env_file: .env

  celery-beat:
    build: ./backend
    command: celery -A config beat -l warning --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/app
    env_file: .env
    depends_on:
      - postgres
      - redis

  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    depends_on:
      - backend
    volumes:
      - ./backend/media/:/media/
      - ./backend/staticfiles/:/staticfiles/
      - ./nginx/dev.conf:/etc/nginx/nginx.conf:ro
    logging:
      driver: none
