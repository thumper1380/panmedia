# Generated by Django 4.2.3 on 2023-07-25 19:04

import apps.utils.folders
import apps.utils.models
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import polymorphic_tree.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('affiliate', '0002_initial'),
        ('settings', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Advertiser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('default_currency', models.CharField(choices=[('EUR', 'Eur'), ('USD', 'Usd')], default='USD', max_length=3, verbose_name='Default Currency')),
                ('active', models.BooleanField(default=True)),
                ('is_test', models.BooleanField(default=False, verbose_name='Test')),
                ('auto_generated_password', models.BooleanField(default=False, help_text='If checked and password is not set, password will be generated automatically', verbose_name='Auto Generated Password')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='settings.goal')),
            ],
        ),
        migrations.CreateModel(
            name='APIConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advertiser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='traffic_distribution.advertiser')),
            ],
            options={
                'verbose_name': 'API Connection',
                'verbose_name_plural': 'API Connection',
            },
        ),
        migrations.CreateModel(
            name='GroupTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Groups',
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('date_format', models.CharField(choices=[('%d-%m-%Y', 'dd-mm-yyyy'), ('%m-%d-%Y', 'mm-dd-yyyy'), ('%Y-%m-%d', 'yyyy-mm-dd')], default='%d-%m-%Y', max_length=30)),
                ('is_test', models.BooleanField(default=False, verbose_name='Test')),
            ],
            options={
                'verbose_name': 'Provider',
                'verbose_name_plural': 'Providers',
            },
            bases=(apps.utils.models.LogModel, models.Model),
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('GET', 'Get'), ('POST', 'Post'), ('PUT', 'Put'), ('PATCH', 'Patch'), ('DELETE', 'Delete')], default='GET', max_length=10)),
                ('body', models.JSONField(blank=True, null=True)),
                ('url', models.CharField(max_length=250, verbose_name='URL')),
                ('path', models.CharField(max_length=250, verbose_name='Path')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('ARRAY', 'Array'), ('OBJECT', 'Object'), ('STRING', 'String'), ('NUMBER', 'Number'), ('BOOLEAN', 'Boolean')], max_length=30, null=True)),
                ('status_code', models.CharField(blank=True, choices=[('200', ' 200'), ('201', ' 201'), ('202', ' 202'), ('204', ' 204'), ('400', ' 400'), ('401', ' 401'), ('403', ' 403'), ('404', ' 404'), ('405', ' 405'), ('406', ' 406'), ('408', ' 408'), ('409', ' 409'), ('410', ' 410'), ('500', ' 500'), ('501', ' 501'), ('502', ' 502'), ('503', ' 503'), ('504', ' 504')], max_length=3, null=True)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
                ('request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='traffic_distribution.request')),
            ],
            options={
                'verbose_name': 'Response',
                'verbose_name_plural': 'Responses',
                'unique_together': {('status_code', 'request')},
            },
        ),
        migrations.CreateModel(
            name='RotationControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', polymorphic_tree.models.PolymorphicTreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='traffic_distribution.rotationcontrol')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Rotation Control',
                'verbose_name_plural': 'Rotation Control',
            },
        ),
        migrations.CreateModel(
            name='CapFolder',
            fields=[
                ('rotationcontrol_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='traffic_distribution.rotationcontrol')),
                ('cap_amount', models.PositiveIntegerField(default=1000)),
                ('current_amount', models.PositiveIntegerField(default=0)),
                ('cap_type', models.CharField(choices=[('regular', 'Regular'), ('drop_on_reject', 'Drop on reject')], default='regular', max_length=255)),
            ],
            options={
                'verbose_name': 'Cap Folder',
                'verbose_name_plural': 'Cap Folders',
            },
            bases=(apps.utils.folders.TargetFolder, 'traffic_distribution.rotationcontrol'),
        ),
        migrations.CreateModel(
            name='RotationControlCountryFolder',
            fields=[
                ('rotationcontrol_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='traffic_distribution.rotationcontrol')),
                ('countries', django_countries.fields.CountryField(max_length=746, multiple=True)),
            ],
            options={
                'verbose_name': 'Country Folder',
                'verbose_name_plural': 'Country Folders',
            },
            bases=('traffic_distribution.rotationcontrol', models.Model),
        ),
        migrations.CreateModel(
            name='SplitFolder',
            fields=[
                ('rotationcontrol_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='traffic_distribution.rotationcontrol')),
            ],
            options={
                'verbose_name': 'Folder',
                'verbose_name_plural': 'Folders',
                'abstract': False,
            },
            bases=('traffic_distribution.rotationcontrol',),
        ),
        migrations.CreateModel(
            name='Unassigned',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=30)),
                ('advertiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unassigned', to='traffic_distribution.advertiser')),
            ],
        ),
        migrations.CreateModel(
            name='SettingsTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic_distribution.grouptemplate')),
            ],
            options={
                'verbose_name': 'Setting',
                'verbose_name_plural': 'Settings',
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('api_connection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='traffic_distribution.apiconnection')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='traffic_distribution.settingstemplate')),
            ],
            options={
                'verbose_name': 'Settings',
                'verbose_name_plural': 'Settings',
            },
        ),
        migrations.CreateModel(
            name='SaleStatusMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advertiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_status_mappings', to='traffic_distribution.advertiser')),
                ('sale_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='settings.salestatus')),
            ],
        ),
        migrations.CreateModel(
            name='ResponseKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, choices=[('advertiser_external_id', 'Advertiser External Id'), ('auto_login_url', 'Auto Login Url'), ('sale_status', 'Sale Status'), ('adv_sub_1', 'Adv Sub 1'), ('adv_sub_2', 'Adv Sub 2'), ('adv_sub_3', 'Adv Sub 3'), ('adv_sub_4', 'Adv Sub 4'), ('adv_sub_5', 'Adv Sub 5')], max_length=30, null=True)),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('response', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='keys', to='traffic_distribution.response')),
            ],
            options={
                'verbose_name': 'Key',
                'verbose_name_plural': 'Keys',
            },
        ),
        migrations.CreateModel(
            name='Header',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, max_length=50)),
                ('value', models.CharField(blank=True, max_length=50, null=True)),
                ('request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='headers', to='traffic_distribution.request')),
            ],
            options={
                'verbose_name': 'Request Header',
                'verbose_name_plural': 'Request Headers',
            },
        ),
        migrations.AddField(
            model_name='grouptemplate',
            name='provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='traffic_distribution.provider'),
        ),
        migrations.CreateModel(
            name='Assigned',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=30)),
                ('sale_status_mapping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned', to='traffic_distribution.salestatusmapping')),
            ],
        ),
        migrations.AddField(
            model_name='apiconnection',
            name='group_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='traffic_distribution.grouptemplate'),
        ),
        migrations.AddField(
            model_name='advertiser',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic_distribution.provider'),
        ),
        migrations.CreateModel(
            name='RotationControlCountrySplitFolder',
            fields=[
                ('splitfolder_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='traffic_distribution.splitfolder')),
                ('countries', django_countries.fields.CountryField(max_length=746, multiple=True)),
            ],
            options={
                'verbose_name': 'Country Split Folder',
                'verbose_name_plural': 'Country Split Folders',
            },
            bases=('traffic_distribution.splitfolder', apps.utils.folders.TargetFolder, models.Model),
        ),
        migrations.CreateModel(
            name='RotationControlAdvertiserSplit',
            fields=[
                ('rotationcontrol_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='traffic_distribution.rotationcontrol')),
                ('weight', models.IntegerField(default=0)),
                ('fill_first', models.BooleanField(default=False)),
                ('counter_updated', models.DateTimeField(auto_now=True)),
                ('advertiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic_distribution.advertiser')),
            ],
            options={
                'verbose_name': 'Advertiser Split',
                'verbose_name_plural': 'Advertiser Split',
            },
            bases=('traffic_distribution.rotationcontrol', models.Model),
        ),
        migrations.CreateModel(
            name='RotationControlAdvertiserFolder',
            fields=[
                ('rotationcontrol_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='traffic_distribution.rotationcontrol')),
                ('advertiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traffic_distribution.advertiser')),
            ],
            options={
                'verbose_name': 'Advertiser Folder',
                'verbose_name_plural': 'Advertiser Folders',
            },
            bases=(apps.utils.folders.TargetFolder, 'traffic_distribution.rotationcontrol', models.Model),
        ),
        migrations.CreateModel(
            name='RotationContolAffiliateFolder',
            fields=[
                ('rotationcontrol_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='traffic_distribution.rotationcontrol')),
                ('affiliate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='affiliate.affiliate')),
            ],
            options={
                'verbose_name': 'Affiliate Folder',
                'verbose_name_plural': 'Affiliate Folders',
            },
            bases=('traffic_distribution.rotationcontrol', models.Model),
        ),
        migrations.CreateModel(
            name='PushLeadRequest',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='traffic_distribution.request')),
                ('provider', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='push_lead_request', to='traffic_distribution.provider')),
            ],
            options={
                'verbose_name': 'Push Lead Request',
                'verbose_name_plural': 'Push Leads Request',
            },
            bases=('traffic_distribution.request',),
        ),
        migrations.CreateModel(
            name='PullLeadsRequest',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='traffic_distribution.request')),
                ('provider', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pull_leads_request', to='traffic_distribution.provider')),
            ],
            options={
                'verbose_name': 'Pull Leads Request',
                'verbose_name_plural': 'Pull Leads Request',
            },
            bases=('traffic_distribution.request',),
        ),
        migrations.CreateModel(
            name='PullConversionsRequest',
            fields=[
                ('request_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='traffic_distribution.request')),
                ('provider', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pull_conversions_request', to='traffic_distribution.provider')),
            ],
            options={
                'verbose_name': 'Pull Conversions Request',
                'verbose_name_plural': 'Pull Conversions Request',
            },
            bases=('traffic_distribution.request',),
        ),
        migrations.CreateModel(
            name='AdvertiserRequiredField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=30)),
                ('key', models.CharField(max_length=30)),
                ('advertiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_fields', to='traffic_distribution.advertiser')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advertiser_required_fields', to='settings.leadprofile')),
            ],
            options={
                'verbose_name': 'Advertiser Required Field',
                'verbose_name_plural': 'Advertiser Required Fields',
                'unique_together': {('key', 'advertiser'), ('field', 'advertiser')},
            },
        ),
        migrations.CreateModel(
            name='RotationControlAffiliateSplitFolder',
            fields=[
                ('splitfolder_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='traffic_distribution.splitfolder')),
                ('affiliate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='affiliate.affiliate')),
            ],
            options={
                'verbose_name': 'Affiliate Split Folder',
                'verbose_name_plural': 'Affiliate Split Folders',
            },
            bases=('traffic_distribution.splitfolder', apps.utils.folders.TargetFolder, models.Model),
        ),
    ]
