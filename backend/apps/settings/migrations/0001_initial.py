# Generated by Django 4.2.3 on 2023-07-25 19:04

import apps.utils.folders
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import polymorphic_tree.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CRMSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_zone', models.CharField(choices=[('UTC', 'Coordinated Universal Time'), ('EST', 'Eastern Standard Time'), ('CST', 'Central Standard Time')], default='UTC', max_length=255)),
                ('time_format', models.CharField(choices=[('%Y-%m-%d %H:%M:%S %Z%z', 'Default'), ('%Y-%m-%d %H:%M:%S', 'Short'), ('%A, %d %B, %Y %H:%M:%S', 'Long')], default='%Y-%m-%d %H:%M:%S %Z%z', max_length=255)),
                ('neutrino_user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('neutrino_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('neutrino_base_url', models.CharField(blank=True, max_length=255, null=True)),
                ('default_time_range', models.IntegerField(blank=True, null=True)),
                ('push_lead_max_retries', models.IntegerField(default=10)),
                ('default_time_frame', models.CharField(blank=True, max_length=255, null=True)),
                ('uniqueness_ttl', models.IntegerField(default=24)),
                ('token_ttl', models.IntegerField(default=168)),
                ('email_host', models.CharField(blank=True, max_length=255, null=True)),
                ('email_port', models.IntegerField(blank=True, null=True)),
                ('email_host_user', models.CharField(blank=True, max_length=255, null=True)),
                ('email_host_password', models.CharField(blank=True, max_length=255, null=True)),
                ('email_use_tls', models.BooleanField(default=True)),
                ('default_from_email', models.EmailField(default='testemail@mail.com', max_length=254)),
            ],
            options={
                'verbose_name': 'CRM Setting',
                'verbose_name_plural': 'CRM Settings',
            },
        ),
        migrations.CreateModel(
            name='CRMTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('order', models.IntegerField(default=0)),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
                ('formula', models.TextField(blank=True, null=True)),
                ('format', models.CharField(choices=[('MONEY', 'Money'), ('PERCENTAGE', 'Percentage'), ('NUMBER', 'Number')], default='NUMBER', max_length=20)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'CRM Term',
                'verbose_name_plural': 'CRM Terms',
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=255, unique=True)),
                ('redirect', models.BooleanField(default=True, help_text='If checked, all HTTP requests will be redirected to HTTPS', verbose_name='Redirect to HTTPS')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(choices=[('tracking', 'Tracking'), ('dashboard', 'Dashboard')], default='tracking', max_length=255)),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
            ],
            options={
                'verbose_name': 'Domain',
                'verbose_name_plural': 'Domains',
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('subject', models.CharField(max_length=255)),
                ('body', models.TextField()),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_unique', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Event Data',
                'verbose_name_plural': 'Event Data',
            },
        ),
        migrations.CreateModel(
            name='EventLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Event Log',
                'verbose_name_plural': 'Event Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExecutedRisk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('risk', 'Risk'), ('released', 'Released')], default='risk', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Executed Risk',
                'verbose_name_plural': 'Executed Risks',
            },
        ),
        migrations.CreateModel(
            name='GoalType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='LeadFlow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Lead Flow',
                'verbose_name_plural': 'Lead Flows',
            },
        ),
        migrations.CreateModel(
            name='QueueManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', django_countries.fields.CountryField(max_length=2, unique=True)),
                ('from_hour', models.TimeField()),
                ('to_hour', models.TimeField()),
                ('from_day', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], default=0)),
                ('to_day', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], default=6)),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('thank_you_url', models.URLField(blank=True, help_text='URL to redirect the user after the lead is created', null=True, verbose_name='Thank You URL')),
                ('min_interval', models.IntegerField(default=0, help_text='The minimum interval between two leads in minutes', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Min Interval')),
                ('max_interval', models.IntegerField(default=0, help_text='The maximum interval between two leads in minutes', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Max Interval')),
                ('filter_rate', models.IntegerField(default=100, help_text='The percentage of the leads that will get into the queue.\n100 means all the leads will get into the queue.\n0 means the leads will be send to rotation tree', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Filter Rate (%)')),
            ],
            options={
                'verbose_name': 'Queue Management',
                'verbose_name_plural': 'Queue Management',
            },
        ),
        migrations.CreateModel(
            name='RiskManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', polymorphic_tree.models.PolymorphicTreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='settings.riskmanagement')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Risk Management',
                'verbose_name_plural': 'Risk Managements',
            },
            bases=(models.Model, apps.utils.folders.Management),
        ),
        migrations.CreateModel(
            name='SaleStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=100, unique=True)),
                ('key', models.CharField(max_length=100, unique=True)),
                ('color', models.CharField(choices=[('#90E623', 'Light Green'), ('#00FF00', 'Green'), ('#FFFF00', 'Yellow'), ('#FFA500', 'Orange'), ('#FF0000', 'Red'), ('#FF0000', 'Light Red'), ('#0000FF', 'Blue'), ('#00FFFF', 'Light Blue'), ('#800080', 'Purple'), ('#FFC0CB', 'Pink'), ('#000000', 'Black'), ('#FFFFFF', 'White'), ('#808080', 'Grey'), ('#A52A2A', 'Brown'), ('#FFD700', 'Gold'), ('#C0C0C0', 'Silver'), ('#B87333', 'Copper'), ('#CD7F32', 'Bronze'), ('#E5E4E2', 'Platinum'), ('#D2D7D3', 'Titanium'), ('#A9ACB6', 'Aluminum'), ('#B0C4DE', 'Steel'), ('#D4D4D4', 'Chrome'), ('#FF00FF', 'Magenta'), ('#00FFFF', 'Cyan'), ('#00FF00', 'Lime'), ('#800000', 'Maroon'), ('#000080', 'Navy'), ('#808000', '#Olive'), ('#008080', 'Teal'), ('#7FFFD4', 'Aquamarine'), ('#40E0D0', 'Turquoise'), ('#EE82EE', 'Violet'), ('#4B0082', 'Indigo'), ('#6A5ACD', 'Slate Blue'), ('#708090', 'Slate Grey'), ('#2F4F4F', 'Slate Black'), ('#F5F5F5', 'Slate White'), ('#8B4513', 'Slate Brown'), ('#FF8C00', 'Slate Orange'), ('#8B0000', 'Slate Red'), ('#2E8B57', 'Slate Green'), ('#9ACD32', 'Slate Yellow'), ('#9370DB', 'Slate Purple'), ('#FF69B4', 'Slate Pink'), ('#00FFFF', 'Slate Cyan'), ('#FF00FF', 'Slate Magenta'), ('#00FF00', 'Slate Lime'), ('#800000', 'Slate Maroon'), ('#000080', 'Slate Navy'), ('#808000', 'Slate Olive'), ('#008080', 'Slate Teal'), ('#7FFFD4', 'Slate Aquamarine')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Sale Status',
                'verbose_name_plural': 'Sale Statuses',
            },
        ),
        migrations.CreateModel(
            name='SMSManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', polymorphic_tree.models.PolymorphicTreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='settings.smsmanagement')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'SMS Management',
                'verbose_name_plural': 'SMS Managements',
            },
            bases=(models.Model, apps.utils.folders.Management),
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('color', models.CharField(choices=[('#00ff00', 'Light Green'), ('#ff0000', 'Light Red'), ('#0000ff', 'Light Blue'), ('#ffff00', 'Light Yellow'), ('#ff00ff', 'Light Magenta'), ('#00ffff', 'Light Cyan'), ('#000000', 'Black'), ('#ffffff', 'White'), ('#800000', 'Maroon'), ('#ff00ff', 'Fuchsia'), ('#800080', 'Purple'), ('#000080', 'Navy'), ('#808000', 'Olive'), ('#008080', 'Teal'), ('#008000', 'Green'), ('#00ffff', 'Aqua'), ('#0000ff', 'Blue'), ('#00ff00', 'Lime'), ('#ff0000', 'Red'), ('#c0c0c0', 'Silver'), ('#808080', 'Gray'), ('#800000', 'Dark Red'), ('#ff00ff', 'Dark Magenta'), ('#800080', 'Dark Purple'), ('#000080', 'Dark Blue'), ('#808000', 'Dark Olive Green'), ('#008080', 'Dark Cyan'), ('#008000', 'Dark Green'), ('#00ffff', 'Dark Aqua'), ('#0000ff', 'Dark Blue'), ('#00ff00', 'Dark Lime'), ('#ff0000', 'Dark Red'), ('#c0c0c0', 'Dark Silver'), ('#808080', 'Dark Gray'), ('#9999ff', 'Pale Blue'), ('#993366', 'Brown'), ('#ffffcc', 'Pale Yellow'), ('#ccffff', 'Pale Cyan'), ('#660066', 'Dark Purple'), ('#ff8080', 'Salmon'), ('#0066cc', 'Royal Blue'), ('#ccccff', 'Light Purple'), ('#000080', 'Midnight Blue'), ('#ff00ff', 'Pink'), ('#ffff00', 'Yellow'), ('#00ffff', 'Cyan'), ('#800080', 'Purple'), ('#800000', 'Maroon'), ('#008080', 'Teal'), ('#0000ff', 'Blue'), ('#00ccff', 'Sky Blue'), ('#ccffff', 'Light Cyan'), ('#ccffcc', 'Pale Green'), ('#ffff99', 'Light Yellow'), ('#99ccff', 'Light Sky Blue'), ('#ff99cc', 'Light Pink'), ('#cc99ff', 'Plum'), ('#ffcc99', 'Peach'), ('#3366ff', 'Royal Blue'), ('#33cccc', 'Turquoise')], max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('handler_type', models.CharField(choices=[('sale', 'Sale'), ('push', 'Push'), ('form-push', 'Form Push'), ('form', 'Form'), ('advertiser-declined', 'Advertiser Declined'), ('advertiser-accepted', 'Advertiser Accepted'), ('impression', 'Impression')], max_length=255)),
                ('color', models.CharField(choices=[('#00ff00', 'Light Green'), ('#ff0000', 'Light Red'), ('#0000ff', 'Light Blue'), ('#ffff00', 'Light Yellow'), ('#ff00ff', 'Light Magenta'), ('#00ffff', 'Light Cyan'), ('#000000', 'Black'), ('#ffffff', 'White'), ('#800000', 'Maroon'), ('#ff00ff', 'Fuchsia'), ('#800080', 'Purple'), ('#000080', 'Navy'), ('#808000', 'Olive'), ('#008080', 'Teal'), ('#008000', 'Green'), ('#00ffff', 'Aqua'), ('#0000ff', 'Blue'), ('#00ff00', 'Lime'), ('#ff0000', 'Red'), ('#c0c0c0', 'Silver'), ('#808080', 'Gray'), ('#800000', 'Dark Red'), ('#ff00ff', 'Dark Magenta'), ('#800080', 'Dark Purple'), ('#000080', 'Dark Blue'), ('#808000', 'Dark Olive Green'), ('#008080', 'Dark Cyan'), ('#008000', 'Dark Green'), ('#00ffff', 'Dark Aqua'), ('#0000ff', 'Dark Blue'), ('#00ff00', 'Dark Lime'), ('#ff0000', 'Dark Red'), ('#c0c0c0', 'Dark Silver'), ('#808080', 'Dark Gray'), ('#9999ff', 'Pale Blue'), ('#993366', 'Brown'), ('#ffffcc', 'Pale Yellow'), ('#ccffff', 'Pale Cyan'), ('#660066', 'Dark Purple'), ('#ff8080', 'Salmon'), ('#0066cc', 'Royal Blue'), ('#ccccff', 'Light Purple'), ('#000080', 'Midnight Blue'), ('#ff00ff', 'Pink'), ('#ffff00', 'Yellow'), ('#00ffff', 'Cyan'), ('#800080', 'Purple'), ('#800000', 'Maroon'), ('#008080', 'Teal'), ('#0000ff', 'Blue'), ('#00ccff', 'Sky Blue'), ('#ccffff', 'Light Cyan'), ('#ccffcc', 'Pale Green'), ('#ffff99', 'Light Yellow'), ('#99ccff', 'Light Sky Blue'), ('#ff99cc', 'Light Pink'), ('#cc99ff', 'Plum'), ('#ffcc99', 'Peach'), ('#3366ff', 'Royal Blue'), ('#33cccc', 'Turquoise')], max_length=255)),
                ('lead_flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='settings.leadflow')),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
            },
        ),
        migrations.CreateModel(
            name='ValidationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('rule_type', models.CharField(choices=[('length', 'Length'), ('format', 'Format'), ('range', 'Range'), ('required', 'Required'), ('email', 'Email'), ('phone', 'Phone')], default='length', max_length=255, verbose_name='Rule Type')),
                ('rule_parameters', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'ValidationRule',
                'verbose_name_plural': 'ValidationRules',
            },
        ),
        migrations.CreateModel(
            name='RiskFolder',
            fields=[
                ('riskmanagement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='settings.riskmanagement')),
                ('state', models.CharField(choices=[('click', 'Click'), ('click_landed', 'Click Landed'), ('lead', 'Lead'), ('lead_queued', 'Lead Queued'), ('lead_pushed', 'Lead Pushed'), ('lead_declined', 'Lead Declined'), ('sale', 'Sale')], default='click', max_length=255)),
                ('strategy', models.CharField(choices=[('amount', 'Amount'), ('percentage', 'Percentage')], default='amount', max_length=255)),
                ('value', models.PositiveIntegerField(default=0)),
                ('current_value', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Risk Folder',
                'verbose_name_plural': 'Risk Folders',
            },
            bases=(apps.utils.folders.TargetFolder, 'settings.riskmanagement'),
        ),
        migrations.CreateModel(
            name='RiskManagementAdvertiserFolder',
            fields=[
                ('riskmanagement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='settings.riskmanagement')),
            ],
            options={
                'verbose_name': 'Advertiser Folder',
                'verbose_name_plural': 'Advertiser Folders',
                'abstract': False,
            },
            bases=('settings.riskmanagement', models.Model),
        ),
        migrations.CreateModel(
            name='RiskManagementAffiliateFolder',
            fields=[
                ('riskmanagement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='settings.riskmanagement')),
            ],
            options={
                'verbose_name': 'Affiliate Folder',
                'verbose_name_plural': 'Affiliate Folders',
                'abstract': False,
            },
            bases=('settings.riskmanagement', models.Model),
        ),
        migrations.CreateModel(
            name='RiskManagementCountryFolder',
            fields=[
                ('riskmanagement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='settings.riskmanagement')),
                ('countries', django_countries.fields.CountryField(max_length=746, multiple=True)),
            ],
            options={
                'verbose_name': 'Country Folder',
                'verbose_name_plural': 'Country Folders',
                'abstract': False,
            },
            bases=('settings.riskmanagement', models.Model),
        ),
        migrations.CreateModel(
            name='SMSAdvertiserFolder',
            fields=[
                ('smsmanagement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='settings.smsmanagement')),
            ],
            options={
                'verbose_name': 'Advertiser Folder',
                'verbose_name_plural': 'Advertiser Folders',
                'abstract': False,
            },
            bases=('settings.smsmanagement', models.Model),
        ),
        migrations.CreateModel(
            name='SMSAffiliateFolder',
            fields=[
                ('smsmanagement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='settings.smsmanagement')),
            ],
            options={
                'verbose_name': 'Affiliate Folder',
                'verbose_name_plural': 'Affiliate Folders',
                'abstract': False,
            },
            bases=('settings.smsmanagement', models.Model),
        ),
        migrations.CreateModel(
            name='SMSCountryFolder',
            fields=[
                ('smsmanagement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='settings.smsmanagement')),
                ('countries', django_countries.fields.CountryField(max_length=746, multiple=True)),
            ],
            options={
                'verbose_name': 'Country Folder',
                'verbose_name_plural': 'Country Folders',
                'abstract': False,
            },
            bases=('settings.smsmanagement', models.Model),
        ),
        migrations.CreateModel(
            name='SMSFolder',
            fields=[
                ('smsmanagement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='settings.smsmanagement')),
                ('message', models.TextField()),
                ('state', models.CharField(choices=[('click', 'Click'), ('click_landed', 'Click Landed'), ('lead', 'Lead'), ('lead_queued', 'Lead Queued'), ('lead_pushed', 'Lead Pushed'), ('lead_declined', 'Lead Declined'), ('sale', 'Sale')], default='click', max_length=255)),
            ],
            options={
                'verbose_name': 'SMS Folder',
                'verbose_name_plural': 'SMS Folders',
            },
            bases=(apps.utils.folders.TargetFolder, 'settings.smsmanagement'),
        ),
        migrations.CreateModel(
            name='TXTRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verification_code', models.CharField(help_text='Point domain TXT record to this value', max_length=255)),
                ('domain', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='txt_record', to='settings.domain')),
            ],
            options={
                'verbose_name': 'TXT Record',
                'verbose_name_plural': 'TXT Records',
            },
        ),
        migrations.CreateModel(
            name='Transition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('from_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_state', to='settings.state')),
                ('lead_flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='settings.leadflow')),
                ('to_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_state', to='settings.state')),
            ],
            options={
                'verbose_name': 'Transition',
                'verbose_name_plural': 'Transitions',
            },
        ),
        migrations.CreateModel(
            name='LeadProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('text', 'Text'), ('textarea', 'Textarea'), ('email', 'Email'), ('url', 'Url'), ('tel', 'Tel'), ('number', 'Number'), ('range', 'Range'), ('date', 'Date'), ('month', 'Month'), ('week', 'Week'), ('time', 'Time'), ('datetime-local', 'Datetime Local'), ('color', 'Color'), ('checkbox', 'Checkbox'), ('radio', 'Radio'), ('file', 'File'), ('hidden', 'Hidden'), ('image', 'Image'), ('button', 'Button'), ('submit', 'Submit'), ('reset', 'Reset')], default='text', max_length=255, verbose_name='Type')),
                ('label', models.CharField(max_length=255)),
                ('key', models.CharField(max_length=255)),
                ('place_holder', models.CharField(blank=True, max_length=255, null=True, verbose_name='Place Holder')),
                ('autocomplete', models.CharField(choices=[('off', 'Off'), ('on', 'On'), ('given-name', 'Given Name'), ('family-name', 'Family Name'), ('email', 'Email'), ('username', 'Username'), ('new-password', 'New Password'), ('current-password', 'Current Password'), ('one-time-code', 'One Time Code'), ('organization', 'Organization'), ('street-address', 'Street Address'), ('address-line1', 'Address Line 1'), ('address-line2', 'Address Line 2'), ('address-line3', 'Address Line 3'), ('address-level4', 'Address Level 4'), ('address-level3', 'Address Level 3'), ('address-level2', 'Address Level 2'), ('address-level1', 'Address Level 1'), ('country', 'Country'), ('country-name', 'Country Name'), ('postal-code', 'Postal Code'), ('cc-name', 'CC Name'), ('cc-given-name', 'CC Given Name'), ('cc-additional-name', 'CC Additional Name'), ('cc-family-name', 'CC Family Name'), ('cc-number', 'CC Number'), ('cc-exp', 'CC Exp'), ('cc-exp-month', 'CC Exp Month'), ('cc-exp-year', 'CC Exp Year'), ('cc-csc', 'CC CSC'), ('cc-type', 'CC Type'), ('transaction-currency', 'Transaction Currency'), ('transaction-amount', 'Transaction Amount'), ('language', 'Language'), ('bday', 'Bday'), ('bday-day', 'Bday Day'), ('bday-month', 'Bday Month'), ('bday-year', 'Bday Year'), ('sex', 'Sex'), ('tel', 'Tel'), ('tel-country-code', 'Tel Country Code'), ('tel-national', 'Tel National'), ('tel-area-code', 'Tel Area Code'), ('tel-local', 'Tel Local'), ('tel-local-prefix', 'Tel Local Prefix'), ('tel-local-suffix', 'Tel Local Suffix'), ('tel-extension', 'Tel Extension'), ('impp', 'Impp'), ('url', 'Url'), ('photo', 'Photo')], default='off', max_length=255, verbose_name='Auto Complete')),
                ('pattern', models.CharField(blank=True, max_length=255, null=True, verbose_name='Pattern')),
                ('position', models.PositiveIntegerField(default=0)),
                ('validation_rules', models.ManyToManyField(blank=True, related_name='fields', to='settings.validationrule')),
            ],
            options={
                'verbose_name': 'Lead Profile',
                'verbose_name_plural': 'Lead Profile',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('click', 'Click'), ('click_landed', 'Click Landed'), ('lead', 'Lead'), ('lead_queued', 'Lead Queued'), ('lead_pushed', 'Lead Pushed'), ('lead_declined', 'Lead Declined'), ('sale', 'Sale')], max_length=255)),
                ('force_sale_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='settings.salestatus')),
                ('goal_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='settings.goaltype')),
            ],
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('header', models.CharField(max_length=255)),
                ('submit_button_text', models.CharField(max_length=100)),
                ('toc', models.BooleanField(default=False, verbose_name='Terms and Conditions, Privacy Policy')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fields', models.ManyToManyField(related_name='forms', to='settings.leadprofile')),
            ],
            options={
                'verbose_name': 'Form',
                'verbose_name_plural': 'Forms',
            },
        ),
    ]
