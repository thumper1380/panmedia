version: '3.3'

volumes:
    postgres_data: {}


services:
  backend:
    build:
      context: ./backend
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    command: /gunicorn.sh
    entrypoint: /entrypoint.sh
    restart: on-failure
    env_file: .env

  postgres:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: .env
  
  
  redis:
    image: "redis:alpine"

  celery:
    build: ./backend
    command: celery -A config worker -l info
    volumes:
      - ./backend:/app
    env_file: .env
    depends_on:
      - postgres
      - redis

  celery-beat:
    build: ./backend
    command: celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/app
    env_file: .env
    depends_on:
      - postgres
      - redis

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./backend/media/:/media/
      - ./backend/staticfiles/:/staticfiles/
      - ./nginx/prod.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/nginx/ssl
      - ./certbot/data:/var/www/certbot

  certbot:
    image: certbot/certbot:latest
    # command: certonly --webroot --webroot-path=/var/www/certbot --email mtjmedia2@gmail.com --agree-tos --no-eff-email -d panmedia.xyz -d www.panmedia.xyz
    volumes:
        - ./certbot/conf:/etc/letsencrypt
        - ./certbot/logs:/var/log/letsencrypt
        - ./certbot/data:/var/www/certbot